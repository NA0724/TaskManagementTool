{"ast":null,"code":"import { ListActionTypes, listReducer } from '../useList';\nexport default function menuReducer(state, action) {\n  if (action.type === ListActionTypes.itemHover) {\n    return state;\n  }\n  const newState = listReducer(state, action);\n\n  // make sure an item is always highlighted\n  if (newState.highlightedValue === null && action.context.items.length > 0) {\n    return {\n      ...newState,\n      highlightedValue: action.context.items[0]\n    };\n  }\n  if (action.type === ListActionTypes.keyDown) {\n    if (action.event.key === 'Escape') {\n      return {\n        ...newState,\n        open: false\n      };\n    }\n  }\n  if (action.type === ListActionTypes.blur) {\n    var _action$context$listb;\n    if (!((_action$context$listb = action.context.listboxRef.current) != null && _action$context$listb.contains(action.event.relatedTarget))) {\n      return {\n        ...newState,\n        open: false,\n        highlightedValue: action.context.items[0]\n      };\n    }\n  }\n  return newState;\n}","map":{"version":3,"names":["ListActionTypes","listReducer","menuReducer","state","action","type","itemHover","newState","highlightedValue","context","items","length","keyDown","event","key","open","blur","_action$context$listb","listboxRef","current","contains","relatedTarget"],"sources":["/Users/bhartiprakash/Documents/GitHub/TaskManagementTool/taskmanagementtool-ui/node_modules/@mui/base/useMenu/menuReducer.js"],"sourcesContent":["import { ListActionTypes, listReducer } from '../useList';\nexport default function menuReducer(state, action) {\n  if (action.type === ListActionTypes.itemHover) {\n    return state;\n  }\n  const newState = listReducer(state, action);\n\n  // make sure an item is always highlighted\n  if (newState.highlightedValue === null && action.context.items.length > 0) {\n    return {\n      ...newState,\n      highlightedValue: action.context.items[0]\n    };\n  }\n  if (action.type === ListActionTypes.keyDown) {\n    if (action.event.key === 'Escape') {\n      return {\n        ...newState,\n        open: false\n      };\n    }\n  }\n  if (action.type === ListActionTypes.blur) {\n    var _action$context$listb;\n    if (!((_action$context$listb = action.context.listboxRef.current) != null && _action$context$listb.contains(action.event.relatedTarget))) {\n      return {\n        ...newState,\n        open: false,\n        highlightedValue: action.context.items[0]\n      };\n    }\n  }\n  return newState;\n}"],"mappings":"AAAA,SAASA,eAAe,EAAEC,WAAW,QAAQ,YAAY;AACzD,eAAe,SAASC,WAAWA,CAACC,KAAK,EAAEC,MAAM,EAAE;EACjD,IAAIA,MAAM,CAACC,IAAI,KAAKL,eAAe,CAACM,SAAS,EAAE;IAC7C,OAAOH,KAAK;EACd;EACA,MAAMI,QAAQ,GAAGN,WAAW,CAACE,KAAK,EAAEC,MAAM,CAAC;;EAE3C;EACA,IAAIG,QAAQ,CAACC,gBAAgB,KAAK,IAAI,IAAIJ,MAAM,CAACK,OAAO,CAACC,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;IACzE,OAAO;MACL,GAAGJ,QAAQ;MACXC,gBAAgB,EAAEJ,MAAM,CAACK,OAAO,CAACC,KAAK,CAAC,CAAC;IAC1C,CAAC;EACH;EACA,IAAIN,MAAM,CAACC,IAAI,KAAKL,eAAe,CAACY,OAAO,EAAE;IAC3C,IAAIR,MAAM,CAACS,KAAK,CAACC,GAAG,KAAK,QAAQ,EAAE;MACjC,OAAO;QACL,GAAGP,QAAQ;QACXQ,IAAI,EAAE;MACR,CAAC;IACH;EACF;EACA,IAAIX,MAAM,CAACC,IAAI,KAAKL,eAAe,CAACgB,IAAI,EAAE;IACxC,IAAIC,qBAAqB;IACzB,IAAI,EAAE,CAACA,qBAAqB,GAAGb,MAAM,CAACK,OAAO,CAACS,UAAU,CAACC,OAAO,KAAK,IAAI,IAAIF,qBAAqB,CAACG,QAAQ,CAAChB,MAAM,CAACS,KAAK,CAACQ,aAAa,CAAC,CAAC,EAAE;MACxI,OAAO;QACL,GAAGd,QAAQ;QACXQ,IAAI,EAAE,KAAK;QACXP,gBAAgB,EAAEJ,MAAM,CAACK,OAAO,CAACC,KAAK,CAAC,CAAC;MAC1C,CAAC;IACH;EACF;EACA,OAAOH,QAAQ;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}